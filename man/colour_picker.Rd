% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/controls_picker.R
\name{colour_picker}
\alias{colour_picker}
\title{Create a colour palette widget}
\usage{
colour_picker(id = basename(tempfile("")), label, sharedData,
  value = "white", showColour = c("both", "text", "background"),
  palette = c("square", "limited"), allowedCols = NULL,
  allowTransparent = FALSE, transparentText = NULL)
}
\arguments{
\item{label}{Display label for the control, or `\code{NULL} for no label.}

\item{value}{Initial value (can be a colour name or HEX code)}

\item{showColour}{Whether to show the chosen colour as text inside the input,
as the background colour of the input, or both (default).}

\item{palette}{The type of colour palette to allow the user to select colours
from. \code{square} (default) shows a square colour palette that allows the
user to choose any colour, while \code{limited} only gives the user a
predefined list of colours to choose from.}

\item{allowedCols}{A list of colours that the user can choose from. Only
applicable when \code{palette == "limited"}. The \code{limited} palette
uses a default list of 40 colours if \code{allowedCols} is not defined.}

\item{allowTransparent}{If \code{TRUE}, then add a checkbox that allows the
user to select the \code{transparent} colour.}

\item{transparentText}{The text to show beside the transparency checkbox
when \code{allowTransparent} is \code{TRUE}. The default value is
"Transparent", but you can change it to "None" or any other string. This has
no effect on the return value from the input; when the checkbox is checked,
the input will always return the string "transparent".}

\item{set}{sets the crosstalk group to inform about changes in input value.}
}
\description{
Create an input control to select a colour, \emph{with or without shiny}
}
\details{
A colour input allows users to select a colour by clicking on the desired
colour, or by entering a valid HEX colour in the input box. The input can
be initialized with either a colour name or a HEX value. The return value is
a HEX value by default, but you can use the \code{returnName = TRUE} parameter
to get an R colour name instead (only when an R colour exists for the
selected colour).

Since most functions in R that accept colours can also accept the value
"transparent", \code{colourInput} has an option to allow selecting the
"transparent" colour. When the user checks the checkbox for this special
colour, the returned value form the input is "transparent".
}
\note{
This function is an adaption of the fabulous \code{\link[shinyjs]{colourInput}}
so that htmlwidgets can take advantage of colour palette changes, without shiny.
}
\examples{
# TODO: get label working (also height/width!)
colour_picker(value = "red", palette = "limited", allowedCols = c("red", "blue"))
}

